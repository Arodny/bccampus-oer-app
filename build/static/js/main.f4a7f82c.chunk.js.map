{"version":3,"sources":["containers/Oer.module.css","containers/Oer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","OerItem","props","className","styles","OerItemTop","onClick","oer","title","rendered","Chevron","style","isOpen","transform","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","Info","InfoOpen","Content","Object","keys","meta","map","item","value","textAlign","href","link","target","rel","Oer","RESOURCE_ENDPOINTS","RESULTS_PER_PAGE","axiosCancelTokens","state","oers","open","loading","page","total","getResources","findTaxonomyLink","resource","taxonomy","_links","find","term","setState","forEach","source","cancel","num_of_endoints","length","num_results_to_fetch_per_endpoint","Math","floor","i","cancelToken","axios","CancelToken","push","get","token","then","response","data","id","Institutions","url","Authors","prevState","concat","Number","headers","catch","e","console","log","isCancel","error","nextPage","previousPage","openResourceHandler","index","key","hasOwnProperty","name","join","outer","err","this","marginLeft","React","Component","ErrorBoundary","hasError","children","App","document","getElementById","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4a7f82c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"OerItem\":\"Oer_OerItem__fERLX\",\"OerItemTop\":\"Oer_OerItemTop__3SA4U\",\"Chevron\":\"Oer_Chevron__2H0jJ\",\"Info\":\"Oer_Info__1WfSz\",\"InfoOpen\":\"Oer_InfoOpen__38XkH\",\"example\":\"Oer_example__M_KQf\",\"Content\":\"Oer_Content__3MP7D\",\"Bottom\":\"Oer_Bottom__tkAsS\"};","import React from 'react';\nimport axios from 'axios';\n\nimport styles from './Oer.module.css';\n\n// Functional component for rendering each Resource\nconst OerItem = (props) => {\n\n    return(\n        <div className={styles.OerItem}>\n            {/* The 'header' of the resource, when clicked it will open or close the dropdown */}\n            <div className={styles.OerItemTop} onClick={props.onClick}>\n            <h3>{props.oer.title.rendered}</h3>\n                <div className={styles.Chevron} style={props.isOpen ? null : {transform: 'rotate(90deg)'}}><svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1 154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z\"></path></svg></div>\n            </div>\n\n            {/* The dropdown part of the resource, shows resource meta data and the link to the resouce*/}\n            <div className={props.isOpen ? `${styles.Info} ${styles.InfoOpen}` : styles.Info}>\n                <div className={styles.Content}>\n                    {\n                        /* map through each property stored in this oer's meta and display it */\n                         Object.keys(props.oer.meta).map(item => {\n                             return(\n                                <p key={item}><b>{item}:</b> {props.oer.meta[item].value}</p>\n                             );\n                         })\n                    }\n                </div>\n                <div style={{textAlign: 'right'}}><a href={props.oer.link} title=\"Open this resource in a new tab\" target='_BLANK' rel='noreferrer' className=\"Button\">Open Resource</a></div>\n            </div>\n        </div>\n    );\n};\n\nclass Oer extends React.Component {\n\n    // The REST endpoints of where to fetch the OER resources from. (Can be array)\n    RESOURCE_ENDPOINTS = ['https://collection.bccampus.ca/wp-json/wp/v2/oer'];\n\n    // The number of resources to display per page\n    RESULTS_PER_PAGE = 12;\n\n    // Array of network request cancel tokens, used to cancel ongoing requests when user changes pagination\n    axiosCancelTokens = [];\n\n    // Initial state\n    state = {\n        oers: [],\n        open: null,\n        loading: true,\n        page: 1,\n        total: 0\n    }\n\n    // When the component first mounts, make a call to the getResources function\n    componentDidMount() {\n        this.getResources();\n    }\n\n    // Function for fetching the resources from the specified endpoints\n    getResources = () => {\n\n        const findTaxonomyLink = (resource, taxonomy) => {\n            return resource._links['wp:term'].find((term => (term.taxonomy === taxonomy)))?.href\n        };\n\n        // Start by settting loading to true, close any open resources, clear the resouces, and reset the total number of resources from state\n        this.setState({loading: true, open: null, oers: [], total: 0});\n        \n        // cancel any existing network requests\n        this.axiosCancelTokens.forEach(source => source.cancel());\n\n        // get the number of resource endpoints\n        let num_of_endoints = this.RESOURCE_ENDPOINTS.length;\n\n        // Set the limit of the number of results to get from each endpoint \n        let num_results_to_fetch_per_endpoint = Math.floor(this.RESULTS_PER_PAGE / num_of_endoints);\n\n        // Loop through each resource endpoint\n        for(let i = 0; i < num_of_endoints; i++) {\n            \n            // if this is the last endpoint, then increase the number of results requested to ensure that we have 12 resources in total\n            // TODO: -- would be great to change this logic to ensure a more even distribution of results per endpoint\n            if(i === num_of_endoints - 1) num_results_to_fetch_per_endpoint = Math.floor(this.RESULTS_PER_PAGE / num_of_endoints) + this.RESULTS_PER_PAGE % num_of_endoints;\n            \n            // create a cancel token for this request and add it to the axiosCancelTokens array\n            let cancelToken = axios.CancelToken.source();\n            this.axiosCancelTokens.push(cancelToken);\n\n            // Get the resource, passing in which page we want and how many results we want per page. Assign the requests its cancel token\n            axios.get(`${this.RESOURCE_ENDPOINTS[i]}?page=${this.state.page}&per_page=${num_results_to_fetch_per_endpoint}`, { cancelToken: cancelToken.token})\n                .then(response => {\n\n                    // transform this data so we're not storing unessesary data in state.\n                    let oers = response.data.map(oer => {\n                        return {id: oer.id, title: oer.title, link: oer.link, meta: {Institutions: {url: findTaxonomyLink(oer, 'institutions'), value: null}, Authors: {url: findTaxonomyLink(oer, 'authors'), value: null}}}\n                    });\n       \n                    // Add these OER resources to state.oer and increase state.total with the x-wp-total header.\n                    this.setState((prevState) => {\n                        return {oers: prevState.oers.concat(oers), total: prevState.total + Number(response.headers['x-wp-total']), loading: false};\n                    });\n                })\n                .catch((e) => {\n                    console.log(e);\n                    if(!axios.isCancel(e)) this.setState({error: 'One or more resources failed to load', loading: false});\n                });\n        }\n    }\n\n    // Function for loading the next page. it increase state.page and calls this.getResources\n    nextPage = () => {\n        this.setState(prevState => ({page: prevState.page + 1}), this.getResources);\n    }\n\n    // Function for loading the previous page. it decreases state.page and calls this.getResources\n    previousPage = () => {\n        if(this.state.page > 1) this.setState(prevState => ({page: prevState.page - 1}), this.getResources);\n    }\n\n    // Handler for when a user clicks on a oer, it opens the drawer and loads additional data for that resource\n    openResourceHandler = (index) => {\n        // Open the drawer for this oer, unless it already is open, in which case close it\n        this.setState(prevState => ({open: prevState.open === index ? null : index}));\n\n        // Get the oer that was toggled from state\n        let oer = this.state.oers[index];\n\n        // Loop through each key in this oer's meta object\n        for(const key in oer.meta) {\n\n            // If this key is real (not prototype stuff), it has a url property and the value for it hasn't been set\n            if(oer.meta.hasOwnProperty(key) && oer.meta[key].url && !oer.meta[key].value) {\n\n                // create a cancel token for this request and add it to the axiosCancelTokens array\n                let cancelToken = axios.CancelToken.source();\n                this.axiosCancelTokens.push(cancelToken);\n\n                // Get this resource (using the url proptery)\n                axios.get(oer.meta[key].url, { cancelToken: cancelToken.token})\n                    .then(response => {\n                        \n                        // Transform the names in the response into one comma delimited string\n                        let valuesArray = response.data.map(item => (item.name));\n                        let value = valuesArray.join(\", \");\n                        \n                        // Update this oer in state to reflect this newly fetched value\n                        this.setState(prevState => {\n\n                            // Start by deep copying any affected state objects/arrays\n                            let outer = [...prevState.oers];\n                            let oer = {...outer[index]};\n                            oer.meta = {...oer.meta};\n                            oer.meta[key] = {...oer.meta[key]};\n                            oer.meta[key].value = value;\n                            outer[index] = oer;\n                            // return updated oers list\n                            return ({oers: outer});\n                        });\n                    })\n                    .catch(err => {\n                        // TODO: - Find a graphical way to show this error to the user\n                        console.log(err);\n                    });\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                { /* Show the loading icon or error message depending on state */}\n                {this.state.loading ? <div className=\"loader\"></div> : null}\n                {this.state.error ? <p className=\"error\">{this.state.error}</p> : null}\n\n                { /* maps through each oer in state and displays it */ }\n                <div>\n                    {this.state.oers.map((oer, index) => {\n                        return(\n                            <OerItem key={oer.id} oer={oer} isOpen={index === this.state.open} onClick={() => this.openResourceHandler(index)} />\n                        );\n                    })}\n                </div>\n                \n                {/* Controls for pagination */}\n                <div className=\"OerControls\">\n\n                    <p>Showing {this.state.oers.length} out of {this.state.total} results</p>\n\n                    <p>Page {this.state.page}</p>\n\n                    <div>\n                        {this.state.page > 1 ? <button className=\"Button\" onClick={this.previousPage} title=\"View the previous page of results\">Previous Page</button> : null}\n                        <button className=\"Button\" onClick={this.nextPage} style={{marginLeft: '1em'}} title=\"View the next page of results\">Next Page</button>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Oer;","import React from 'react';\n\nimport Oer from './containers/Oer';\n\n// Generic error boundary wrapper to put around the OER component\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) { \n    return { hasError: true };  \n  }\n\n  render() {\n    if (this.state.hasError) { \n      return <h2 className=\"error\">Something went wrong.</h2>;    \n    }\n    else return this.props.children; \n  }\n}\n\nclass App extends React.Component {\n\n  // When the component mounts, remove the loading screen\n  componentDidMount() {\n    document.getElementById('loadingScreen')?.remove();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        { /* The application Header */}\n        <header className=\"Header\">\n          <h1>OER Collection</h1>\n          <h2>from BCcampus</h2>\n          <div className=\"Graphic\"></div>\n        </header>\n\n        { /* Main Content, calls the Oer class within an error boundary */ }\n        <div className=\"MainContent\">\n          <h1>Resource List</h1>\n          <div className=\"OerSection\">\n            <ErrorBoundary>\n              <Oer />\n            </ErrorBoundary>\n          </div>\n        </div>\n\n        { /* The application footer */}\n        <footer className=\"Footer\">\n          <p>This application was developed for BCcampus by Joe Hall. All content on this page is subject to BCcampus' terms of use.</p>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}